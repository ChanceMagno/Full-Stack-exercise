[  {    "type": "get",    "url": "/api/token",    "title": "Get auth token",    "name": "GetToken",    "group": "Authentication",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>Bearer token</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"token\":\"LEHAF\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./server.js",    "groupTitle": "Authentication"  },  {    "type": "post",    "url": "/api/triplogs",    "title": "Create a triplog",    "name": "CreateTriplog",    "group": "Triplogs",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Triplog",            "optional": false,            "field": "Created",            "description": "<p>triplog</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"token\":\"LEHAF\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "ValidationError",            "description": "<p>Any problems found when validating triplog object</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "NotAuthorized",            "description": "<p>Invalid/missing bearer token</p>"          }        ]      },      "examples": [        {          "title": "ValidationError",          "content": "HTTP/1.1 400\n{\n  \"errors\": {\n    \"segments.0.mode\": {\n      \"message\": \"`biksssse` is not a valid enum value for path `mode`.\",\n      \"name\": \"ValidatorError\",\n      \"properties\": {\n        \"enumValues\": [\n          \"bike\",\n          \"carpool\",\n          \"drive\",\n          \"transit\",\n          \"vanpool\",\n          \"walk\",\n          \"telework\"\n        ],\n        \"type\": \"enum\",\n        \"message\": \"`{VALUE}` is not a valid enum value for path `{PATH}`.\",\n        \"path\": \"mode\",\n        \"value\": \"biksssse\"\n      },\n      \"kind\": \"enum\",\n      \"path\": \"segments.0.mode\",\n      \"value\": \"biksssse\"\n    }\n  },\n  \"message\": \"Validation failed\",\n  \"name\": \"ValidationError\"\n}",          "type": "json"        },        {          "title": "AuthorizationError",          "content": "HTTP/1.1 401 Not Found\nNot Authorized",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./server.js",    "groupTitle": "Triplogs",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "authorization",            "description": "<p>Bearer token</p>"          }        ]      },      "examples": [        {          "title": "Bearer Token Example:",          "content": "{\n  \"Authorization\": \"Bearer JSQLM\"\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/api/triplogs/:id",    "title": "Delete an existing Triplog",    "name": "DeleteTriplog",    "group": "Triplogs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "ObjectId",            "optional": false,            "field": "id",            "description": "<p>Object ID Triplog</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./server.js",    "groupTitle": "Triplogs",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "authorization",            "description": "<p>Bearer token</p>"          }        ]      },      "examples": [        {          "title": "Bearer Token Example:",          "content": "{\n  \"Authorization\": \"Bearer JSQLM\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "NotAuthorized",            "description": "<p>Invalid/missing bearer token</p>"          }        ]      },      "examples": [        {          "title": "AuthorizationError",          "content": "HTTP/1.1 401 Not Found\nNot Authorized",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/api/triplogs",    "title": "Get all triplogs",    "name": "GetTriplogs",    "group": "Triplogs",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "Array",            "description": "<p>of Triplog objects</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"token\":\"LEHAF\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./server.js",    "groupTitle": "Triplogs",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "authorization",            "description": "<p>Bearer token</p>"          }        ]      },      "examples": [        {          "title": "Bearer Token Example:",          "content": "{\n  \"Authorization\": \"Bearer JSQLM\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "NotAuthorized",            "description": "<p>Invalid/missing bearer token</p>"          }        ]      },      "examples": [        {          "title": "AuthorizationError",          "content": "HTTP/1.1 401 Not Found\nNot Authorized",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/api/triplogs/:id",    "title": "Update an existing Triplog",    "name": "UpdateTriplog",    "group": "Triplogs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "ObjectId",            "optional": false,            "field": "id",            "description": "<p>Object ID Triplog</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 204 OK",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "ValidationError",            "description": "<p>Any problems found when validating triplog object</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "NotAuthorized",            "description": "<p>Invalid/missing bearer token</p>"          }        ]      },      "examples": [        {          "title": "ValidationError",          "content": "HTTP/1.1 400\n{\n  \"errors\": {\n    \"segments.0.mode\": {\n      \"message\": \"`biksssse` is not a valid enum value for path `mode`.\",\n      \"name\": \"ValidatorError\",\n      \"properties\": {\n        \"enumValues\": [\n          \"bike\",\n          \"carpool\",\n          \"drive\",\n          \"transit\",\n          \"vanpool\",\n          \"walk\",\n          \"telework\"\n        ],\n        \"type\": \"enum\",\n        \"message\": \"`{VALUE}` is not a valid enum value for path `{PATH}`.\",\n        \"path\": \"mode\",\n        \"value\": \"biksssse\"\n      },\n      \"kind\": \"enum\",\n      \"path\": \"segments.0.mode\",\n      \"value\": \"biksssse\"\n    }\n  },\n  \"message\": \"Validation failed\",\n  \"name\": \"ValidationError\"\n}",          "type": "json"        },        {          "title": "AuthorizationError",          "content": "HTTP/1.1 401 Not Found\nNot Authorized",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./server.js",    "groupTitle": "Triplogs",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "authorization",            "description": "<p>Bearer token</p>"          }        ]      },      "examples": [        {          "title": "Bearer Token Example:",          "content": "{\n  \"Authorization\": \"Bearer JSQLM\"\n}",          "type": "json"        }      ]    }  }]
